package service_proxy

import (
  "<%= appName %>/dto"
  "<%= appName %>/helpers/page"
  "<%= appName %>/helpers/pagination"
  "<%= appName %>/service"
)

// <%= entityVar %> use for async,...
type <%= entityVar %> struct {
  service service.<%= entityClass %>
}

func New<%= entityClass %>(service service.<%= entityClass %>) service.<%= entityClass %> {
  return &<%= entityVar %>{service: service}
}

func (p *<%= entityVar %>) Save(<%= entityVar %>DTO dto.<%= entityClass %>DTO) (dto.<%= entityClass %>DTO, bool) {
  return p.service.Save(<%= entityVar %>DTO)
}

func (p *<%= entityVar %>) FindOne(id uint) (dto.<%= entityClass %>DTO, bool) {
  return p.service.FindOne(id)
}

func (p *<%= entityVar %>) FindPage(pageable pagination.Pageable) page.Page {
  return p.service.FindPage(pageable)
}

func (p *<%= entityVar %>) Delete(id uint) {
  p.service.Delete(id)
}

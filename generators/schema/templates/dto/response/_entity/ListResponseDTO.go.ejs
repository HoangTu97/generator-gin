package <%= entityClass %>Response

import (
  "<%= appName %>/helpers/page"
  "<%= appName %>/models"
)

// ListResponseDTO godoc
type ListResponseDTO struct {
  Items      []ListItemResponseDTO `json:"items"`
  TotalItems int64                     `json:"totalItems"`
}

// ListItemResponseDTO godoc
type ListItemResponseDTO struct {
  ID uint `json:"id"`
<% fields.forEach(function(field){ %>
  <%= field.name %> <%= field.type %> <% if (field.jsonConfig !== '') {%>`<%- field.jsonConfig %>`<%}%><% }); %>
}

// CreateListResponseDTOFromPage create page from page models.<%= entityClass %>
func CreateListResponseDTOFromPage(page page.Page) *ListResponseDTO {
  result := make([]ListItemResponseDTO, page.GetTotalElements())
  for i, v := range page.GetContent() {
    entity := v.(models.<%= entityClass %>)

    result[i] = ListItemResponseDTO{
      ID: entity.ID,
      // Auto-gen fields<% fields.forEach(function(field){ %>
      <%= field.name %>: entity.<%= field.name %>,<% }); %>
      // Auto-gen fields : dont remove
    }
  }
  return &ListResponseDTO{
    Items:      result,
    TotalItems: page.GetTotalItems(),
  }
}
